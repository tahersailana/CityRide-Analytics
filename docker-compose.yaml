version: '3'
services:
  testdb_postgres:
    image: postgres:14
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: test_data
    container_name: testdb_postgres

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"  # Default LocalStack port
      - "4571:4571"  # Optional: For older SDKs or specific services
    environment:
      - SERVICES=s3
      - AWS_DEFAULT_REGION=us-east-1
      - LOCALSTACK_HOSTNAME=localhost  # Important for some SDK configurations
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"

  airflow-webserver:
    build:
      context: .
      dockerfile: airflow.Dockerfile
    container_name: airflow-webserver
    restart: always
    depends_on:
      - testdb_postgres
    environment:
      - AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth
      - AIRFLOW__WEBSERVER__SECRET_KEY=supersecurekey123
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password123@testdb_postgres:5432/test_data
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    ports:
      - "8080:8080"
    command: webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2g
    #       cpus: "2.0"

  airflow-scheduler:
    build:
      context: .
      dockerfile: airflow.Dockerfile
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
      - testdb_postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://user:password123@testdb_postgres:5432/test_data
    command: scheduler
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2g
    #       cpus: "2.0"
